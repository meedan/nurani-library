<?php

/**
 * Implements hook_install().
 */
function nurani_library_install() {
  nurani_library_create_API_account();
}

/**
 * Implementation of hook_requirements().
 */
function nurani_library_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if ($phase == 'runtime') {
    $account = user_load_by_name('API');
    $pass = variable_get('nurani_library_api_user_pass', FALSE);

    $requirements['nurani_library']['title'] = $t('Nurani Library');
    if (!$account || $account->uid <= 0) {
      $requirements['nurani_library']['value'] = $t('Nurani Library API account missing! <a href="!url">Create it now</a>', array(
        '!url' => url('admin/structure/nurani-library/create-api-account', array('query' => array('destination' => $_GET['q'])))
      ));
      $requirements['nurani_library']['severity'] = REQUIREMENT_ERROR;
    }
    else if ($pass !== FALSE) {
      drupal_add_js(drupal_get_path('module', 'nurani_library') . '/js/nurani_library_reveal_password.js');

      $requirements['nurani_library']['value'] = $t("Nurani Library API account exists");
      $requirements['nurani_library']['description'] = $t('Store the password for the API account in a safe place then delete the <em>nurani_library_api_user_pass</em> variable.  Password: <strong class="reveal-password">!pass</strong>', array(
        // For (some) safety, only display the password to the admin user
        '!pass' => $GLOBALS['user']->uid == 1 ? $pass : $t('<span style="color: red">You do not have sufficient permissions, log in as the admin user.</span>')
      ));
      $requirements['nurani_library']['severity'] = REQUIREMENT_WARNING;
    }
    else {
      $requirements['nurani_library']['value'] = $t("Nurani Library API account exists");
      $requirements['nurani_library']['severity'] = REQUIREMENT_OK;
    }
  }

  return $requirements;
}

/**
 * Creates an account named 'API' for use with REST Services.
 */
function nurani_library_create_API_account() {
  // Create the API account with a random password, store the password in the
  // database temporarily.  It is up to the administrator to remove the
  // nurani_library_api_user_pass variable for security.
  $pass = user_password();
  $api_role = user_role_load_by_name('API');

  // The API role is stored in a feature, but when the site is installing the
  // order the features are installed can cause this to not exist yet.  Creating
  // it here causes no issues.
  if (!$api_role || $api_role->rid <= 0) {
    // Create a default role for site administrators, with all available permissions assigned.
    $api_role = new stdClass();
    $api_role->name = 'API';
    $api_role->weight = 3;
    user_role_save($api_role);
  }

  $new_user = array(
    'name' => 'API',
    'pass' => $pass,
    'mail' => 'api-no-reply@' . $_SERVER['SERVER_NAME'],
    'init' => 'api-no-reply@' . $_SERVER['SERVER_NAME'],
    'status' => 1,
    'access' => time(),
    'roles' => array(
      DRUPAL_AUTHENTICATED_RID => 'authenticated user',
      $api_role->rid => $api_role->name,
    ),
  );

  $account = user_save(null, $new_user);
  if ($account && $account->uid > 0) {
    variable_set('nurani_library_api_user_pass', $pass);
    drupal_set_message(t('Nurani Library API account created successfully. Write down the account password <strong>!pass</strong> in a safe place then delete the <em>nurani_library_api_user_pass</em> variable.', array('!pass' => $pass)), 'warning');
  }
}
