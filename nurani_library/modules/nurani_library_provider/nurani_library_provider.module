<?php

require_once dirname(__FILE__) . '/nurani_library_provider.inc';

/**
 * Implements hook_help().
 */
function nurani_library_provider_help($path, $arg) {
  switch ($path) {
    case 'admin/structure/nurani-library/provider/works':
      return '<p>' . t("Works are container objects which house passages. At least one work record must be created before ") . '</p>';
  }
}

/**
 * Implements hook_permission().
 */
function nurani_library_provider_permission() {
  return array(
    'validate passages' =>  array(
      'title' => t('Validate Nurani Library passages'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function nurani_library_provider_theme($existing, $type, $theme, $path) {
  return array(
    'nurani_library_provider_works_form_table' => array(
      'render element' => 'element',
      'file' => 'nurani_library_provider.admin.inc',
    ),
    'nurani_library_provider_import_form_table' => array(
      'render element' => 'element',
      'file' => 'nurani_library_provider.admin.inc',
    ),
    'nurani_library_provider_passage_widget' => array(
      'variables' => array('osisIDWork' => NULL, 'osisID' => NULL, 'passages' => NULL),
      'file' => 'nurani_library_provider.widget.inc',
    ),
    'nurani_library_provider_passage_text' => array(
      'variables' => array('passage' => NULL),
      'file' => 'nurani_library_provider.widget.inc',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function nurani_library_provider_menu() {
  $items = array();
  $items['admin/structure/nurani-library/provider'] = array(
    'title' => 'Provider',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nurani_library_provider_admin_form'),
    'access arguments' => array('administer content types'),
    'file' => 'nurani_library_provider.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/structure/nurani-library/provider/settings'] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nurani_library_provider_admin_form'),
    'access arguments' => array('administer content types'),
    'file' => 'nurani_library_provider.admin.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/structure/nurani-library/provider/works'] = array(
    'title' => 'Works',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nurani_library_provider_works_form'),
    'access arguments' => array('administer content types'),
    'file' => 'nurani_library_provider.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => -5,
  );
  $items['admin/structure/nurani-library/provider/import'] = array(
    'title' => 'Import',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nurani_library_provider_import_form'),
    'access arguments' => array('administer content types'),
    'file' => 'nurani_library_provider.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => -4,
  );
  return $items;
}

/**
 * Implementation of hook_views_api().
 */
function nurani_library_provider_views_api() {
  return array(
    'api' => 3.0,
  );
}

/**
 * Implements hook_nurani_library_backend().
 */
function nurani_library_provider_nurani_library_backend() {
  return array(
    array(
      'name' => 'Drupal',
      'description' => t("Local Drupal database storage"),
    )
  );
}

/**
 * Implements hook_oembedprovider().
 */
function nurani_library_provider_oembedprovider() {
  $base_url = url('', array('absolute' => TRUE)) . 'passages/*';
  return array(
    $base_url => array(
      'callback' => 'nurani_library_provider_passages_provider',
    ),
  );
}

/**
 * OEmbed provider callback for passages/*
 *
 * Used like: http://library.nurani.org/oembed/endpoint?url=http://library.nurani.org/passages/wlc_he/Gen.1.1&format=json
 */
function nurani_library_provider_passages_provider($provider, $url, $matches) {
  $result = FALSE;

  $scrubbed_url = preg_replace('/#.*$/', '', $matches[1]);
  list($osisIDWorks, $osisID) = explode('/', $scrubbed_url);

  $output = '';
  foreach (explode(',', $osisIDWorks) as $osisIDWork) {
    $info = nurani_library_get_passages_info($osisIDWork, $osisID);

    if ($info !== FALSE) {
      $output .= theme('nurani_library_provider_passage_widget', array('osisIDWork' => $osisIDWork, 'osisID' => $osisID, 'passages' => $info['passages']));
    }
  }

  if (!$output) {
    if (!$osisIDWorks) {
      $error = t('Error, no <em>work</em> defined for this passage.');
    }
    else if (!$osisID) {
      $error = t('Error, no <em>passage</em> defined.');
    }
    else {
      $passage_title = "$osisIDWork:$osisID";
      $error = t('%passage was not found in the Nurani Library.', array('%passage' => $passage_title));
    }
    return '<div class="error">'
         .   '<div class="message">'
         .     $error
         .   '</div>'
         .   '<div class="info">'
         .     t('Please contact the @site team', array('@site' => variable_get('site_name', 'Nurani Library')))
         .   '</div>'
         . '</div>';
  }

  $result = _oembedprovider_result('rich', array(
    'html' => $output,
    'title' => $info['passage_human'],
    'author_name' => variable_get('site_name', 'Nurani Library'),
    'author_url' => url('', array('absolute' => TRUE)),
  ));

  return $result;
}
