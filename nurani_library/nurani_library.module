<?php

require_once dirname(__FILE__) . '/nurani_library.inc';

/**
 * Implements hook_help().
 */
function nurani_library_help($path, $arg) {
  switch ($path) {
    case 'admin/structure/nurani-library/works':
      return '<p>' . t("Works are container objects which house passages. At least one work record must be created before ") . '</p>';
  }
}

/**
 * Implements hook_theme().
 */
function nurani_library_theme($existing, $type, $theme, $path) {
  return array(
    'nurani_library_works_form_table' => array(
      'render element' => 'element',
      'file' => 'nurani_library.admin.inc',
    ),
    'nurani_library_import_form_table' => array(
      'render element' => 'element',
      'file' => 'nurani_library.admin.inc',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function nurani_library_menu() {
  $items = array();
  $items['admin/structure/nurani-library'] = array(
    'title' => 'Nurani Library',
    'description' => 'Manage Nurani Library configuration and works.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nurani_library_admin_form'),
    'access arguments' => array('administer content types'),
    'file' => 'nurani_library.admin.inc',
  );
  $items['admin/structure/nurani-library/information'] = array(
    'title' => 'Information',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nurani_library_admin_form'),
    'access arguments' => array('administer content types'),
    'file' => 'nurani_library.admin.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  return $items;
}

/**
 * Implements hook_nurani_library_backend().
 */
function nurani_library_nurani_library_backend() {
  return array(
    array(
      'name' => 'REST',
      'description' => t("Remote Nurani Library server, using REST+JSON connection."),
      'settings' => array(
        'file' => drupal_get_path('module', 'nurani_library') . '/nurani_library.admin.inc',
        'callback' => 'nurani_library_rest_settings_form',
      ),
    )
  );
}
